<Project>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)..\, Directory.Build.targets))\Directory.Build.targets" />

  <PropertyGroup>
    <TargetPath>$(OutputPath)$(TargetFileName)</TargetPath>
    <DebBuildDependsOn>
      $(DebBuildDependsOn);
      PrepareForBuild;
      ResolveProjectReferences;
      GetTargetPath;
    </DebBuildDependsOn>
  </PropertyGroup>

  <Target Name="PrepareForBuild">
    <Error Text="Currently only linux-x64 is supported by Debian installers." Condition=" '$(TargetRuntimeIdentifier)' != 'linux-x64' " />

    <MakeDir Directories="$(IntermediateOutputPath);$(IntermediatePackageRoot);$(OutputPath)" />
  </Target>

  <Target Name="GetTargetPath" Returns="$(TargetPath)" />

  <Target Name="Build" DependsOnTargets="DebBuild" />

  <Target Name="DebBuild" DependsOnTargets="$(DepBuildDependsOn)">
    <!-- Generate debian_config.json. We can't simply use WriteLinesToFile because of https://github.com/Microsoft/msbuild/issues/1622. Use our custom GenerateFileFromTemplate task instead -->
    <PropertyGroup>
      <DebianConfigProperties>
        $(DebianConfigProperties);
        AspNetCoreMajorVersion=$(AspNetCoreMajorVersion);
        AspNetCoreMinorVersion=$(AspNetCoreMinorVersion);
        Authors=$(Authors);
        DebianPackageInstallRoot=$(DebianPackageInstallRoot);
        MaintainerEmail=$(MaintainerEmail);
        PackageId=$(PackageId);
        PackageLicenseType=$(PackageLicenseType);
        PackageProjectUrl=$(PackageProjectUrl);
        PackageRevision=$(PackageRevision);
        PackageVersion=$(PackageVersion);
        PackageShortDescription=$(PackageShortDescription);
        PackageLongDescription=$(PackageLongDescription);
      </DebianConfigProperties>
    </PropertyGroup>

    <GenerateFileFromTemplate TemplateFile="debian_config.json.in"
      Properties="$(DebianConfigProperties)"
      OutputPath="$(IntermediateOutputPath)debian_config.json" />

    <!-- Build SharedFx Bundle Deb package -->

    <Exec Command="$(DebianBuildScript) -i '$(IntermediateOutputPath)' -o '$(IntermediateOutputPath)out/'" />

    <PropertyGroup>
      <BuildScriptOutputFileName>$(PackageId)_$(PackageVersion)-$(PackageRevision)_$(DebianPackageArch).deb</BuildScriptOutputFileName>
    </PropertyGroup>

    <Copy SourceFiles="$(IntermediateOutputPath)out/$(BuildScriptOutputFileName)" DestinationFiles="$(TargetPath)" />
  </Target>
</Project>
